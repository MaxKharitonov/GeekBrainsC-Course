// Напишите программу вычисления функции Аккермана с помощью рекурсии. 
// Даны два неотрицательных числа m и n.

// m = 2, n = 3 -> A(m,n) = 9

Console.WriteLine();
Console.WriteLine($"Введите первое число: ");   //  Запрос ввода от пользователя.
int m = Convert.ToInt32(Console.ReadLine());
if (isPositive(m) == false) //  Вызов метода, проверяющего, является ли число положительным.
{
    Console.WriteLine();    //  Если число отрицательное, выводится ошибка и завершается программа.
    Console.WriteLine($"Ошибка! Число не может быть меньше 0!");
    return;
}
else    //  Если число положительное, продолжается выполнение программы.
{
    Console.WriteLine();
    Console.WriteLine($"Введите второе число: ");   //  Запрос ввода от пользователя.
}
int n = Convert.ToInt32(Console.ReadLine());
if (isPositive(n) == false) //  Вызов метода, проверяющего, является ли число положительным.
{
    Console.WriteLine();    //  Если число отрицательное, выводится ошибка и завершается программа.
    Console.WriteLine($"Ошибка! Число не может быть меньше 0!");
    return;
}
else    //  Если число положительное, продолжается выполнение программы.
{
    //  Т.к результатом вычисления функции Аккермана может быть невообразимо огромное число,
    //  выполняется проверка введенных чисел, на соответствие значениям, при которых вычислить
    //  функцию Аккермана является возможным.
    if ((m > 5 || m == 5 && n > 0) || (m == 4 && n > 1) || (m == 3 && n > 13) || (m == 2 && n > 65426))
    {
        //  В случае, если введенные числа, выходят за пределы, в которых возможно вычислить 
        //  функцию Аккермана, выводится сообщение о невозможности вычисления функции.
        //  Можно обойтись без этой проверки, но программа может зависнуть и все равно выбросит 
        //  исключение о переполнении стека (Stack Overflow exception).
        //  Выполнив проверку, программа либо прекратит свою работу, не приступая к вычислениям
        //  и сэкономит время, либо вычислит значение функции.
        Console.WriteLine($"Функцию Аккермана с заданными числами невозможно вычислить!");
        Console.WriteLine($"Значение функции настолько велико, что записать его в десятичном виде невозможно!");
        return;
    }
    else    //  В случае, если введенные числа, не выходят за пределы, программа продолжает работу.
    {
        Console.WriteLine();
        //  Вызов основного метода программы и вывод результата работы.
        Console.WriteLine($"Результат вычисления функции Аккермана: {ack(m, n)}");
        Console.WriteLine();
        Console.WriteLine();
    }
}

int ack(int m, int n)   //  Метод вычисляющий значение функции Аккермана.
{
    if (m == 0)
    {
        return n + 1;
    }
    else if (m > 0 && n == 0)
    {
        return ack(m - 1, 1);
    }
    else
    {
        return ack(m - 1, ack(m, n - 1));
    }
}

bool isPositive(int number) //  Метод, проверяющий, является ли введенное число положительным.
{
    if (number < 0)
    {
        return false;
    }
    else
    {
        return true;
    }
}

// int n = Convert.ToInt32(new Random().Next(0, 3));
// Console.WriteLine();
// Console.WriteLine($"Первое число: {n});
// int m = Convert.ToInt32(new Random().Next(0, 3));
// Console.WriteLine();
// Console.WriteLine($"Второе число: {m});